directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
) on FIELD_DEFINITION | OBJECT | INTERFACE
type BlogArticle {
  id: ID!
  title: String!
  article: String!
}

input BlogArticleInput {
  shelter_id: ID!
  title: String!
  article: String!
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

# Valid timestamp
scalar DateTime

type Mutation {
  smoke(input: String): String
  signIn(input: SignInput): String!
  signUp(input: SignInput): String!
  postBlogArticle(input: BlogArticleInput!): BlogArticle!
  postShelter(input: PostShelterInput!): Shelter!
  postPet(input: PostPetInput!): Pet!
}

type Pet {
  id: ID!
  name: String!
  shelter: Shelter
  picture: String!
  gender: PetGender
  age: Int
}

enum PetGender {
  unknown
  male
  female
}

input PostPetInput {
  name: String!
  shelter_id: ID!
  picture: String
  gender: PetGender
  age: Int
}

input PostShelterInput {
  name: String!
  description: String
  category: ShelterCategory = DOGS
}

type Query {
  smoke: String
  totalUsers: Int!
  allUsers: [User!]!
  blogArticles(shelter_id: ID!): [BlogArticle!]!
  totalShelters: Int!
  allShelters: [Shelter!]!
  pets: [Pet!]!
  pet(id: String): Pet!
}

type Shelter {
  id: ID!
  name: String!
  description: String
  category: ShelterCategory!
  created_at: DateTime
  posted_by: User!
  blog_articles: [BlogArticle!]
}

enum ShelterCategory {
  CATS
  DOGS
  BOTH
}

input SignInput {
  email: String!
  password: String!
}

# The `Upload` scalar type represents a file upload.
scalar Upload

type User {
id: ID!
email: String!
password: String!
}

